Preliminary Online Interview Test for Python
 
Thank you for your application. Our recruitment process is in 3 stages. We have decided to carry out the first stage online. The other 2 stages will be physical interviews at our Offices in Lagos.
 
Find below the Technical Interview Questions.  Before commencing, kindly acknowledge receipt of this Email.
 
Thank you for your Interest in the Bincom ICT Solutions.
Note: You will need to complete the test within 6 hours of getting this notification.
 
STEP 1
Kindly answer the attached Questions using python

STEP 2
Upload your .py file to any Temporary hosting for Assessment e.g. Google Drive.


STEP 3

When you have completed the test,  Complete the following form to confirm that you have completed the Test. 
https://blog.bincom.net/bincomforms/bincom-recruitment-online-interview-submission-form/ 

The submission should contain:
1.      An attachment of your working code files (preferably a link to an online repository or storage)
 
 
Wishing You All the best
 



Python Basic Developer Test
Background:
You have been provided with a web page showing the colors of dresses put on by Bincom staffs for the week. We are planning to produce Tshirts for staffs and we have issues deciding the colors to be used. We want to make our decision based on the analysis of the data presented in the web page.

Kindly go through the web page and write a python program that answers the questions below:
 
Requirements:
·         You may use python2 or python3
·         You may use any IDE of your choice
·         You may use regular expression
 
Key Features:
1.      Which color of shirt is the mean color?
2.      Which color is mostly worn throughout the week?
3.      Which color is the median?
4.      BONUS Get the variance of the colors
5.      BONUS if a colour is chosen at random, what is the probability that the color is red?
6.      Save the colours and their frequencies in postgresql database
7.      BONUS write a recursive searching algorithm to search for a number entered by user in a list of numbers.
8.      Write a program that generates random 4 digits number of 0s and 1s and convert the generated number to base 10.
9.      Write a program to sum the first 50 fibonacci sequence.
 
Hints:
Bonus Questions are not Required but are recommended.
We are Testing your Basic Programming Ability.
You may browse any website of your choice to get code snippets and tutorials if necessary.
Follow this link to get the html page https://drive.google.com/open?id=1nf9WMDjZWIUnlnKyz7qomEYDdtWfW1Uf
 



<html>
<head>
<title>Our Python Class exam</title>

<style type="text/css">
	
	body{
		width:1000px;
		margin: auto;
	}
	table,tr,td{
		border:solid;
		padding: 5px;
	}
	table{
		border-collapse: collapse;
		width:100%;
	}
	h3{
		font-size: 25px;
		color:green;
		text-align: center;
		margin-top: 100px;
	}
	p{
		font-size: 18px;
		font-weight: bold;
	}
</style>

</head>
<body>
<h3>TABLE SHOWING COLOURS OF DRESS BY WORKERS AT BINCOM ICT FOR THE WEEK</h3>
<table>
	
	<thead>
		<th>DAY</th><th>COLOURS</th>
	</thead>
	<tbody>
	<tr>
		<td>MONDAY</td>
		<td>GREEN, YELLOW, GREEN, BROWN, BLUE, PINK, BLUE, YELLOW, ORANGE, CREAM, ORANGE, RED, WHITE, BLUE, WHITE, BLUE, BLUE, BLUE, GREEN</td>
	</tr>
	<tr>
		<td>TUESDAY</td>
		<td>ARSH, BROWN, GREEN, BROWN, BLUE, BLUE, BLEW, PINK, PINK, ORANGE, ORANGE, RED, WHITE, BLUE, WHITE, WHITE, BLUE, BLUE, BLUE</td>
	</tr>
	<tr>
		<td>WEDNESDAY</td>
		<td>GREEN, YELLOW, GREEN, BROWN, BLUE, PINK, RED, YELLOW, ORANGE, RED, ORANGE, RED, BLUE, BLUE, WHITE, BLUE, BLUE, WHITE, WHITE</td>
	</tr>
	<tr>
		<td>THURSDAY</td>
		<td>BLUE, BLUE, GREEN, WHITE, BLUE, BROWN, PINK, YELLOW, ORANGE, CREAM, ORANGE, RED, WHITE, BLUE, WHITE, BLUE, BLUE, BLUE, GREEN</td>
	</tr>
	<tr>
		<td>FRIDAY</td>
		<td>GREEN, WHITE, GREEN, BROWN, BLUE, BLUE, BLACK, WHITE, ORANGE, RED, RED, RED, WHITE, BLUE, WHITE, BLUE, BLUE, BLUE, WHITE</td>
	</tr>

	</tbody>
</table>

<p>Examine the sequence below very well, you will discover that for every 1s that appear 3 times, the output will be one, otherwise the output will be 0.</p>
<p>0101101011101011011101101000111 <span style="color:orange;">Input</span></p>
<p>0000000000100000000100000000001 <span style="color:orange;">Output</span></p>
<p>
</body>
</html>





















# Answers to the interview questions

# To find the mean color 

colors = {}
for row in table.find_all('td')[1::2]:
    for color in row.text.split():
        colors[color] = colors.get(color, 0) + 1
mean_color = sum(colors.values()) / len(colors)
print("Mean color:", mean_color)

# The mostly worn color: 

mostly_worn_color = max(colors, key=colors.get)
print("Color worn most:", mostly_worn_color)

# Median - middle element

sorted_colors = sorted(colors.values())
if len(sorted_colors) % 2 == 0:
    median = (sorted_colors[len(sorted_colors) // 2 - 1] + sorted_colors[len(sorted_colors) // 2]) / 2
else:
    median = sorted_colors[len(sorted_colors) // 2]
print("Median color:", median)

# Variance - calculate the mean, quare the deviations, sum them, then divide by total

mean_color = sum(colors.values()) / len(colors)
variance = sum((color - mean_color) ** 2 for color in colors.values()) / len(colors)
print("Variance of colors:", variance)

#  Probability of red

red_count = colors.get("RED", 0)
total_count = sum(colors.values())
red_probability = red_count / total_count
print("Probability of red:", red_probability)

# To save the colors and their frequencies to a PostgreSQL database

import psycopg2

conn = psycopg2.connect(
    database="bincom_colors", user="bincom_user", password="bincom_password", host="bincom_host", port="5432"
)

cursor = conn.cursor()

sql = "INSERT INTO colors (color, count) VALUES (%s, %s)"
for color, count in colors.items():
    cursor.execute(sql, (color, count))
conn.commit()

cursor.close()
conn.close()


# Recursive searching algorithm

def recursive_search(arr, target, start):
    if start >= len(arr):
        return -1
    if arr[start] == target:
        return start
    return recursive_search(arr, target, start + 1)

# Example of usage
print(recursive_search([1, 2, 3, 4, 5], 3, 0))


# Generate random number

import random

def generate_random_number():
    digits = [0, 1]
    number = ""
    for I in range(4):
        number += str(random.choice(digits))
    return int(number)

# Example of usage
print(generate_random_number())


# Sum of first 50 Fibonacci sequence

def fibonacci(n):
    if n <= 1:
        return n
    return fibonacci(n - 1) + fibonacci(n - 2)

# Calculate the sum of the first 50 Fibonacci numbers
sum = 0
for I in range(50):
    sum += fibonacci(i)
print("Sum of first 50 Fibonacci numbers:", sum)